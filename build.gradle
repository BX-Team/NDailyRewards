plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'io.papermc.paperweight.userdev' version '1.7.7'
}

group = project.group
version = project.version
description = project.description

repositories {
    mavenCentral()
    gradlePluginPortal()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "extendedclip"
        url = "https://repo.extendedclip.com/content/repositories/placeholderapi/"
    }
    maven {
        name = "jitpack"
        url = "https://jitpack.io"
    }
    maven {
        name "bxTeamReleases"
        url "https://repo.bx-team.space/releases"
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:${project.paper_api}") // Paper API
    paperweight.paperDevBundle("${project.paper_api}")

    // Dependencies
    implementation("com.zaxxer:HikariCP:${project.hikari_cp}")
    implementation("org.mariadb.jdbc:mariadb-java-client:${project.mariadb}")
    implementation("space.bxteam:commons-bukkit:${project.commons}")
    compileOnly("me.clip:placeholderapi:${project.placeholder_api}")
}

tasks {
    compileJava {
        options.encoding = 'UTF-8'
        options.release.set(17)
    }
    java {
        withSourcesJar()
        withJavadocJar()
    }
    javadoc {
        options.encoding = 'UTF-8'
    }
    jar {
        enabled = false
    }
    build {
        dependsOn('shadowJar')
    }
    processResources {
        def props = [version: version]
        inputs.properties props
        filteringCharset 'UTF-8'
        filesMatching('plugin.yml') {
            expand props
        }
    }
    assemble {
        dependsOn(tasks.reobfJar)
    }
    shadowJar {
        archiveClassifier.set('')
        archiveFileName.set("${project.name}-${project.version}.jar")
        from(file("LICENSE"))

        dependencies {
            include(dependency("com.zaxxer:HikariCP:${project.hikari_cp}"))
            include(dependency("org.mariadb.jdbc:mariadb-java-client:${project.mariadb}"))
            include(dependency("space.bxteam:commons-bukkit:${project.commons}"))
            include(dependency("space.bxteam:commons-shared:${project.commons}"))

            exclude("META-INF/NOTICE")
            exclude("META-INF/maven/**")
            exclude("META-INF/versions/**")
            exclude("META-INF/**.kotlin_module")
        }
    }
}

publishing {
    repositories {
        maven {
            name = "ndailyrewards"
            if (project.version.endsWith("-SNAPSHOT")) {
                url = "https://repo.bx-team.space/snapshots"
            } else {
                url = "https://repo.bx-team.space/releases"
            }
            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
    publications {
        maven(MavenPublication) {
            groupId = "space.bxteam"
            artifactId = "ndailyrewards"
            version = project.version
            from components.java
        }
    }
}
